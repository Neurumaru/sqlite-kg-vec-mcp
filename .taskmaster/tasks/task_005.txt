# Task ID: 5
# Title: 로깅 패턴 표준화
# Status: in-progress
# Dependencies: None
# Priority: medium
# Description: getLogger vs 의존성 주입 방식 통일
# Details:
코드베이스 전반에 걸친 logging.getLogger(__name__) vs 파라미터 주입 방식 혼재 문제 해결

# Test Strategy:
일관된 로깅 패턴 적용 확인

# Subtasks:
## 1. 로거 팩토리 개선 및 표준화 [pending]
### Dependencies: None
### Description: ObservableLogger 팩토리 함수 개선하여 의존성 주입을 위한 표준 인터페이스 제공
### Details:
기존 get_logger() 함수를 개선하여 컴포넌트별 로거 생성을 표준화하고, 타입 힌트와 문서화 추가

## 2. Domain 서비스 로깅 리팩터링 [pending]
### Dependencies: None
### Description: 도메인 서비스들의 로깅을 ObservableLogger로 통일하고 의존성 주입 패턴으로 변경
### Details:
DocumentProcessor, DocumentValidation, DocumentPersistence, KnowledgeSearch 서비스들을 ObservableLogger로 변경

## 3. Adapter 계층 로깅 리팩터링 [pending]
### Dependencies: None
### Description: 어댑터 계층의 로깅을 ObservableLogger로 통일하고 직접 getLogger 호출 제거
### Details:
SQLite, Ollama, FastMCP 어댑터들의 로깅을 표준화하고 의존성 주입 패턴 적용

## 4. Validation Manager 로깅 개선 [pending]
### Dependencies: None
### Description: ValidationManager의 혼재된 로깅 패턴을 ObservableLogger로 통일
### Details:
getLogger 직접 호출과 의존성 주입이 혼재된 ValidationManager를 일관된 패턴으로 리팩터링

## 5. 팩토리 함수들의 로거 주입 구현 [pending]
### Dependencies: None
### Description: 모든 팩토리 함수와 생성자에 로거 매개변수 추가하여 의존성 주입 완성
### Details:
서비스와 어댑터 팩토리 함수들에 logger 매개변수를 추가하고 기본값으로 get_logger() 사용

## 6. 테스트 및 검증 [pending]
### Dependencies: None
### Description: 리팩터링된 로깅 시스템의 동작 확인과 회귀 테스트 실행
### Details:
모든 테스트 통과 확인, 로깅 출력 형식 검증, 컨텍스트 전파 테스트

